{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "__Cloud Connector Description__\n\nThe purpose of this service is to provide a way for applications to notify a given/registered webhook of various events that occur in the system.\n\n__Configuration Values__\n\u003cblockquote\u003eNotification service configuration is is split between values set in a configuration file and those set as environment variables in the compose file. The configuration file is expected to be contained in a docker secret for production deployments, but can be on a docker volume for validation and development.\n\u003cblockquote\u003e\u003cb\u003eConfiguration file values\u003c/b\u003e\n\u003cblockquote\u003e•\u003cb\u003e serviceName\u003c/b\u003e - Runtime name of the service.\u003c/blockquote\u003e\n\u003cblockquote\u003e•\u003cb\u003e loggingLevel\u003c/b\u003e - Logging level to use: \"info\" (default) or \"debug\" (verbose).\u003c/blockquote\u003e\n\u003cblockquote\u003e•\u003cb\u003e telemetryEndpoint\u003c/b\u003e - URL of the telemetry service receiving the metrics from the service.\u003c/blockquote\u003e\n\u003cblockquote\u003e•\u003cb\u003e telemetryDataStoreName\u003c/b\u003e - Name of the data store in the telemetry service to store the metrics.\u003c/blockquote\u003e\n\u003cblockquote\u003e•\u003cb\u003e port\u003c/b\u003e - Port to run the service's HTTP Server on.\u003c/blockquote\u003e\n\u003cblockquote\u003e•\u003cb\u003e httpsProxyURL\u003c/b\u003e - URL of the proxy server  \u003c/blockquote\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\u003cb\u003eCompose file environment variable values\u003c/b\u003e\n\u003cblockquote\u003e•\u003cb\u003e runtimeConfigPath\u003c/b\u003e - Path to the configuration file to use at runtime.\u003c/blockquote\u003e\n\u003c/blockquote\u003e\n\n\u003cpre\u003e\u003cb\u003eExample configuration file json\n\u0026#9{\n\u0026#9\u0026#9\"serviceName\": \"RRP - Notification\",\n\u0026#9\u0026#9\"loggingLevel\": \"debug\",\n\u0026#9\u0026#9\"telemetryEndpoint\": \"http://166.130.9.122:8000\",\n\u0026#9\u0026#9\"telemetryDataStoreName\" : \"Store105\",\n\u0026#9\u0026#9\"port\": \"8080\",\n\u0026#9\u0026#9\"httpsProxyURL\" : http://proxy-us.intel.com:912\n\u0026#9}\n\u003c/b\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003cb\u003eExample environment variables in compose file\n\u0026#9runtimeConfigPath: \"/data/configs/cloudconnector.json\"\n\u003c/b\u003e\u003c/pre\u003e\n\n__Known services that depend upon this service:__\n○ Rules\n○ RFID-Alert",
    "title": "Cloud Connector.",
    "contact": {
      "name": "Intel RRP Support",
      "email": "rrp@intel.com"
    },
    "version": "1.0.0"
  },
  "host": "cloudConnector:8080",
  "basePath": "/",
  "paths": {
    "/": {
      "get": {
        "description": "Endpoint that is used to determine if the application is ready to take web requests",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "default"
        ],
        "summary": "Healthcheck Endpoint",
        "operationId": "Healthcheck",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/aws-cloud/data": {
      "post": {
        "description": "This API call is used to upload data to an S3 bucket by passing the access key id, secret access key, region, and bucket name in the request along with the payload.\n\nAccessKeyID - AWS access key ID\n\nSecretAccessKey - AWS secret access key\n\nRegion - AWS Region\n\nBucket - The bucket path/name\n\nPayload - The payload intended for the destination. This is typically a json object or map of values.\n\nExpected formatting of JSON input (as an example):\u003cbr\u003e\u003cbr\u003e\n\n```\n{\n\"accesskeyid\": \"\u003cACCESS KEY ID\u003e\",\n\"secretaccesskey\": \"\u003cSECRET ACCESS KEY\u003e\",\n\"bucket\": \"\u003cBUCKET\u003e\",\n\"region\" : \"\u003cREGION\u003e\",\n\"payload\" : \"data\"\n}\n```",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "awsclouddata"
        ],
        "summary": "Upload to AWS cloud",
        "operationId": "AwsCloud",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "ErrReport error",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ErrReport"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/callwebhook": {
      "post": {
        "description": "This API call is used to request Responsive Retail to notify the enterprise system when specific events occur in the store. The notifications take place by a web callback, typically referred to as a web hook. A notification request must include the following information:\n\nURL - The call back URL. Responsive Retail must be able to post data to this URL.\n\nAuth - Authentication settings used\nAuthType - The Authentication method defined by the webhook (ex. OAuth2)\nEndpoint - The Authentication endpoint if it differs from the webhook server\nData - The Authentication data required by the authentication server\n\nPayload - The payload intended for the destination webhook. This is typically a json object or map of values.\n\nExpected formatting of JSON input (as an example):\u003cbr\u003e\u003cbr\u003e\n\n```\n{\n\"url\": \"string\",\n\"auth\": {\n\"authtype\": \"string\",\n\"endpoint\": \"string\",\n\"data\":     \"string\"\n},\n\"payload\": \"interface\"\n}\n```",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "webhooks"
        ],
        "summary": "Send Notification",
        "operationId": "callwebhook",
        "parameters": [
          {
            "x-go-name": "WebhookObj",
            "name": "webhook",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "400": {
            "description": "ErrReport error",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ErrReport"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Auth": {
      "description": "Auth contains the type and the endpoint of authentication",
      "type": "object",
      "properties": {
        "authtype": {
          "type": "string",
          "x-go-name": "AuthType"
        },
        "data": {
          "type": "string",
          "x-go-name": "Data"
        },
        "endpoint": {
          "type": "string",
          "x-go-name": "Endpoint"
        }
      },
      "x-go-package": "github.impcloud.net/Responsive-Retail-Inventory/cloud-connector-service/app/cloudConnector"
    },
    "CloudConnector": {
      "type": "object",
      "title": "CloudConnector represents the User API method handler set.",
      "x-go-package": "github.impcloud.net/Responsive-Retail-Inventory/cloud-connector-service/app/routes/handlers"
    },
    "ErrReport": {
      "description": "ErrReport is used to wrap schema validation errors int json object",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "errortype": {
          "type": "string",
          "x-go-name": "ErrorType"
        },
        "field": {
          "type": "string",
          "x-go-name": "Field"
        },
        "value": {
          "type": "object",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "github.impcloud.net/Responsive-Retail-Inventory/cloud-connector-service/app/routes/handlers"
    },
    "ErrorList": {
      "description": "ErrorList provides a collection of errors for processing",
      "type": "object",
      "properties": {
        "errors": {
          "description": "The error list\nin: body",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrReport"
          },
          "x-go-name": "Errors"
        }
      },
      "x-go-package": "github.impcloud.net/Responsive-Retail-Inventory/cloud-connector-service/app/routes/handlers"
    },
    "Header": {
      "type": "object",
      "title": "A Header represents the key-value pairs in an HTTP header.",
      "additionalProperties": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "x-go-package": "net/http"
    },
    "Webhook": {
      "description": "Webhook contains webhook address, headers, method, authentication method, and payload",
      "type": "object",
      "properties": {
        "auth": {
          "$ref": "#/definitions/Auth"
        },
        "header": {
          "$ref": "#/definitions/Header"
        },
        "method": {
          "type": "string",
          "x-go-name": "Method"
        },
        "payload": {
          "type": "object",
          "x-go-name": "Payload"
        },
        "url": {
          "type": "string",
          "x-go-name": "URL"
        }
      },
      "x-go-package": "github.impcloud.net/Responsive-Retail-Inventory/cloud-connector-service/app/cloudConnector"
    },
    "resultsResponse": {
      "description": "Response wraps results, inlinecount, and extra fields in a json object",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Count"
        },
        "results": {
          "type": "object",
          "x-go-name": "Results"
        }
      },
      "x-go-name": "Response",
      "x-go-package": "github.impcloud.net/Responsive-Retail-Inventory/cloud-connector-service/app/routes/handlers"
    }
  },
  "responses": {
    "ErrReport": {
      "description": "ErrorList provides a collection of errors for processing",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ErrReport"
        }
      }
    },
    "internalError": {
      "description": "JSONError is the response for errors that occur within the API.",
      "headers": {
        "error": {
          "type": "string"
        }
      }
    }
  }
}