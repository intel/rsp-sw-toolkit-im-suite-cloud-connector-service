consumes:
  - application/json
produces:
  - application/json
schemes:
  - https
swagger: '2.0'
info:
  description: |-
    __Cloud Connector Service Description__

    The purpose of this service is to provide a way for applications to notify a given/registered webhook of various events that occur in the system.

    __Configuration Values__
    <blockquote>Cloud Connector service configuration is split between values set in a configuration file and those set as environment variables in the compose file. The configuration file is expected to be contained in a docker secret for production deployments, but can be on a docker volume for validation and development.
    <blockquote><b>Configuration file values</b>
    <blockquote>•<b> serviceName</b> - Runtime name of the service.</blockquote>
    <blockquote>•<b> loggingLevel</b> - Logging level to use: "info" (default) or "debug" (verbose).</blockquote>
    <blockquote>•<b> telemetryEndpoint</b> - URL of the telemetry service receiving the metrics from the service.</blockquote>
    <blockquote>•<b> telemetryDataStoreName</b> - Name of the data store in the telemetry service to store the metrics.</blockquote>
    <blockquote>•<b> port</b> - Port to run the service's HTTP Server on.</blockquote>
    <blockquote>•<b> httpsProxyURL</b> - URL of the proxy server  </blockquote>
    </blockquote>

    <pre><b>Example configuration file json
    &#9{
    &#9&#9"serviceName": "Cloud Connector",
    &#9&#9"loggingLevel": "debug",
    &#9&#9"telemetryEndpoint": "http://telemetry:8000",
    &#9&#9"telemetryDataStoreName" : "Store105",
    &#9&#9"port": "8080",
    &#9&#9"httpsProxyURL" : http://proxy.com
    &#9}
    </b></pre>
    
  title: Cloud Connector Service.
  version: 1.0.0
host: 'cloud-connector:8080'
basePath: /
paths:
  /:
    get:
      description: Endpoint that is used to determine if the application is ready to take web requests
      consumes:
        - application/json
      produces:
        - application/json
      schemes:
        - http
      tags:
        - default
      summary: Healthcheck Endpoint
      operationId: Healthcheck
      responses:
        '200':
          description: OK
  /aws-cloud/data:
    post:
      description: |-
        This API call is used to upload data to an S3 bucket by passing the access key id, secret access key, region, and bucket name in the request along with the payload.

        AccessKeyID - (required) AWS access key ID

        SecretAccessKey - (required) AWS secret access key

        Region - (required) AWS Region

        Bucket - (required) The bucket path/name

        Payload - (optional) The payload intended for the destination. This is typically a json object or map of values.

        Expected formatting of JSON input (as an example):<br><br>

        ```
        {
        "accesskeyid": "<ACCESS KEY ID>",
        "secretaccesskey": "<SECRET ACCESS KEY>",
        "bucket": "<BUCKET>",
        "region" : "<REGION>",
        "payload" : "data"
        }
        ```
      consumes:
        - application/json
      produces:
        - application/json
      schemes:
        - http
      tags:
        - awsclouddata
      summary: Upload to AWS cloud
      operationId: AwsCloud
      responses:
        '200':
          description: OK
        '400':
          description: ErrReport error
          schema:
            type: array
            items:
              $ref: '#/definitions/ErrReport'
        '500':
          description: Internal server error
  /callwebhook:
    post:
      description: "This API call is used to notify the enterprise system when specific events occur in the store. The notifications take place by a web callback, typically referred to as a web hook. A notification request must include the following information:\n\nURL - (required) The call back URL. Responsive Retail must be able to post data to this URL.\n\nMethod - (required) The http method to be ran on the webhook(Allowed methods: GET or POST)\n\nHeader - (optional) The header for the webhook\n\nIsAsync - (required) Whether the cloud call should be made sync or async. To be notified of errors connecting to the cloud use IsAsync:true.GET HTTP verb ignores IsAsync flag.\n\nAuth - (optional) Authentication settings used\nAuthType - The Authentication method defined by the webhook (ex. OAuth2)\nEndpoint - The Authentication endpoint if it differs from the webhook server\nData - The Authentication data required by the authentication server\n\nPayload - (optional) The payload intended for the destination webhook. This is typically a json object or map of values.\n\nExpected formatting of JSON input (as an example):<br><br>\n\n```\n{\n\"url\": \"string\",\n\"method\": \"string\",\n\"auth\": {\n\"authtype\": \"string\",\n\"endpoint\": \"string\",\n\"data\":     \"string\"\n},\n\"isasync\": \t\tboolean,\n\"payload\": \"interface\"\n}\n```"
      consumes:
        - application/json
      produces:
        - application/json
      schemes:
        - http
      tags:
        - webhooks
      summary: Send Notification
      operationId: callwebhook
      responses:
        '201':
          description: OK
        '400':
          description: ErrReport error
          schema:
            type: array
            items:
              $ref: '#/definitions/ErrReport'
        '404':
          description: Not Found
        '500':
          description: Internal server error
definitions:
  Auth:
    description: Auth contains the type and the endpoint of authentication
    type: object
    properties:
      authtype:
        type: string
        x-go-name: AuthType
      data:
        type: string
        x-go-name: Data
      endpoint:
        type: string
        x-go-name: Endpoint
  CloudConnector:
    type: object
    title: CloudConnector represents the User API method handler set.
  ErrReport:
    description: ErrReport is used to wrap schema validation errors int json object
    type: object
    properties:
      description:
        type: string
        x-go-name: Description
      errortype:
        type: string
        x-go-name: ErrorType
      field:
        type: string
        x-go-name: Field
      value:
        type: object
        x-go-name: Value
  ErrorList:
    description: ErrorList provides a collection of errors for processing
    type: object
    properties:
      errors:
        description: |-
          The error list
          in: body
        type: array
        items:
          $ref: '#/definitions/ErrReport'
        x-go-name: Errors
  Header:
    type: object
    title: A Header represents the key-value pairs in an HTTP header.
    additionalProperties:
      type: array
      items:
        type: string
    x-go-package: net/http
  Webhook:
    description: 'Webhook contains webhook address, headers, method, authentication method, and payload'
    type: object
    properties:
      auth:
        $ref: '#/definitions/Auth'
      header:
        $ref: '#/definitions/Header'
      isasync:
        type: boolean
        x-go-name: IsAsync
      method:
        type: string
        x-go-name: Method
      payload:
        type: object
        x-go-name: Payload
      url:
        type: string
        x-go-name: URL
  resultsResponse:
    description: 'Response wraps results, inlinecount, and extra fields in a json object'
    type: object
    properties:
      count:
        type: integer
        format: int64
        x-go-name: Count
      results:
        type: object
        x-go-name: Results
    x-go-name: Response
responses:
  ErrReport:
    description: ErrorList provides a collection of errors for processing
    schema:
      type: array
      items:
        $ref: '#/definitions/ErrReport'
  internalError:
    description: JSONError is the response for errors that occur within the API.
    headers:
      error:
        type: string
